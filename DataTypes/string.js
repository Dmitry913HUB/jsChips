/*          Доступ к символам        */
{
    // Получить символ, который занимает позицию pos, 
    // можно с помощью квадратных скобок: [pos]. 
    // Также можно использовать метод str.at(pos). 
    // Первый символ занимает нулевую позицию:

    let str = `Hello`;

    // получаем первый символ
    alert( str[0] ); // H
    alert( str.at(0) ); // H

    // получаем последний символ
    alert( str[str.length - 1] ); // o
    alert( str.at(-1) );

    //Квадратные скобки всегда возвращают undefined 
    //для отрицательных индексов. Например:

    str = `Hello`;

    alert( str[-2] ); // undefined
    alert( str.at(-2) ); // l

    //Также можно перебрать строку посимвольно, используя for..of:

    for (let char of "Hello") {
        alert(char); // H,e,l,l,o (char — сначала "H", потом "e", потом "l" и т.д.)
    }
    
}
/*---------------------------------------*/
/*          Строки неизменяемы        */
{
    let str = 'Hi';

    str[0] = 'h'; // ошибка
    alert( str[0] ); // не работает

    //Можно создать новую строку и записать её в ту же самую переменную вместо старой.

    str = 'Hi';

    str = 'h' + str[1]; // заменяем строку

    alert( str ); // hi
    
}
/*---------------------------------------*/
/*          Изменение регистра        */
{
    //Методы toLowerCase() и toUpperCase() меняют регистр символов:

    alert( 'Interface'.toUpperCase() ); // INTERFACE
    alert( 'Interface'.toLowerCase() ); // interface

    //Если мы захотим перевести в нижний регистр какой-то конкретный символ:

    alert( 'Interface'[0].toLowerCase() ); // 'i'
    
}
/*---------------------------------------*/
/*          Итого        */
{
    // str.indexOf
    // Первый метод — str.indexOf(substr, pos).
    // Он ищет подстроку substr в строке str, начиная с позиции pos, 
    // и возвращает позицию, на которой располагается совпадение, либо -1 при отсутствии совпадений.

    let str = 'Widget with id';

    alert( str.indexOf('Widget') ); // 0, потому что подстрока 'Widget' найдена в начале
    alert( str.indexOf('widget') ); // -1, совпадений нет, поиск чувствителен к регистру

    alert( str.indexOf("id") ); // 1, подстрока "id" найдена на позиции 1 (..idget with id)

    //Например, первое вхождение "id" — на позиции 1. 
    //Для того, чтобы найти следующее, начнём поиск с позиции 2:

    str = 'Widget with id';

    alert( str.indexOf('id', 2) ) // 12

    //алгоритм поиска всех подстрок в строке
    str = "Ослик Иа-Иа посмотрел на виадук";
    let target = "Иа";

    let pos = -1;
    while ((pos = str.indexOf(target, pos + 1)) != -1) {
    alert( pos );
}
    
}
/*---------------------------------------*/
/*          Итого        */
{
    
}
/*---------------------------------------*/
/*          Итого        */
{
    
}
/*---------------------------------------*/
/*          Итого        */
{
    
}
/*---------------------------------------*/